package net.yozo.services.front.order.dao.impl;import net.yozo.core.dao.BaseDao;import net.yozo.core.dao.page.PagerModel;import net.yozo.services.front.order.bean.Order;import net.yozo.services.front.order.bean.OrderRecordForCustomize;import net.yozo.services.front.order.bean.OrderSimpleReport;import net.yozo.services.front.order.bean.OrdersReport;import net.yozo.services.front.order.dao.OrderDao;import org.springframework.stereotype.Repository;import javax.annotation.Resource;import java.math.BigDecimal;import java.util.List;@Repository("orderDaoFront")public class OrderDaoImpl implements OrderDao {    @Resource	private BaseDao dao;	public void setDao(BaseDao dao) {		this.dao = dao;	}	public PagerModel selectPageList(Order e) {		return dao.selectPageList("front.order.selectPageList",				"front.order.selectPageCount", e);	}	public List selectList(Order e) {		return dao.selectList("front.order.selectList", e);	}	public Order selectOne(Order e) {		return (Order) dao.selectOne("front.order.selectOne", e);	}	public int delete(Order e) {		return dao.delete("front.order.delete", e);	}	public int update(Order e) {		return dao.update("front.order.update", e);	}	public int deletes(String[] ids) {		Order e = new Order();		for (int i = 0; i < ids.length; i++) {			e.setId(ids[i]);			delete(e);		}		return 0;	}	public int insert(Order e) {		return dao.insert("front.order.insert", e);	}	public int deleteById(int id) {		return dao.delete("front.order.deleteById", id);	}	public Order selectById(String id) {		return (Order) dao.selectOne("front.order.selectById", id);	}	@SuppressWarnings("unchecked")	@Override	public List<Order> selectOrderInfo(Order order) {		return dao.selectList("front.order.selectOrderInfo",order);	}	@Override	public OrderSimpleReport selectOrdersSimpleReport(String Emailaccount) {		return (OrderSimpleReport) dao.selectOne("front.order.selectOrdersSimpleReport",Emailaccount);	}	@Override	public Order selectByAccAndTid(Order order) {		return (Order) dao.selectOne("front.order.selectByAccAndTid", order);	}	@Override	public OrdersReport loadOrdersReport() {		return (OrdersReport) dao.selectOne("front.order.loadOrdersReport");	}	@Override	public Order selectByOrderNum(String orderNum) {		return (Order) dao.selectOne("front.order.selectByOrderNum", orderNum);	}	@Override	public Order selectYoudianOrder(Order order) {		return (Order) dao.selectOne("front.order.selectYoudianOrder", order);	}	@Override	public int selectCount(Order order) {		Object obj = dao.selectOne("front.order.selectCount", order);		if(obj==null){			return 0;		}		return Integer.valueOf(obj.toString());	}	@Override	public PagerModel selectOrderRecordForCustomize(OrderRecordForCustomize e) {		return dao.selectPageList("front.order.selectOrderRecordForCustomize",				"front.order.selectCountOrderRecordForCustomize", e);	}	/**	 * 检索定制订单	 * @param order	 * @return	 */	public Order selectCustomizeOrder(Order order){		return (Order)dao.selectOne("front.order.selectCustomizeOrder", order);	}	public String selectAllIncomeByAccount(Integer account){		return (String)dao.selectOne("front.order.selectAllIncomeByAccount", account);	}	@Override	public PagerModel selectIncomePageList(Order e){		return dao.selectPageList("front.order.selectIncomePageList",				"front.order.selectIncomePageCount", e);	}	public int selectTemplateSalesCount(Integer account){		return (Integer)dao.selectOne("front.order.selectTemplateSalesCount",account);	}	public int selectCustomizeSalesCount(Integer account){		return (Integer)dao.selectOne("front.order.selectCustomizeSalesCount",account);	}	public int selectIncomePageCount(Integer account){		return (Integer)dao.selectOne("front.order.selectIncomePageCount",account);	}}