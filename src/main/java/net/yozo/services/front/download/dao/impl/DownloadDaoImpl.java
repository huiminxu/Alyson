package net.yozo.services.front.download.dao.impl;import net.yozo.core.dao.BaseDao;import net.yozo.core.dao.page.PagerModel;import net.yozo.services.front.download.bean.Download;import net.yozo.services.front.download.dao.DownloadDao;import org.springframework.stereotype.Repository;import javax.annotation.Resource;import java.util.List;@Repository("downloadDaoFront")public class DownloadDaoImpl implements DownloadDao {    @Resource	private BaseDao dao;	public void setDao(BaseDao dao) {		this.dao = dao;	}	public PagerModel selectPageList(Download e) {		return dao.selectPageList("front.download.selectPageList",				"front.download.selectPageCount", e);	}	public List selectList(Download e) {		return dao.selectList("front.download.selectList", e);	}	public Download selectOne(Download e) {		return (Download) dao.selectOne("front.download.selectOne", e);	}	public int delete(Download e) {		return dao.delete("front.download.delete", e);	}	public int update(Download e) {		return dao.update("front.download.update", e);	}	public int deletes(String[] ids) {		Download e = new Download();		for (int i = 0; i < ids.length; i++) {			e.setId(ids[i]);			delete(e);		}		return 0;	}	public int insert(Download e) {		return dao.insert("front.download.insert", e);	}	public int deleteById(int id) {		return dao.delete("front.download.deleteById", id);	}	@Override	public Download selectById(String id) {		return (Download) dao.selectOne("front.download.selectOne", id);	}	@Override	public int selectCount(Download download) {		Object obj = dao.selectOne("front.download.selectCount", download);		if(obj==null){			return 0;		}		return Integer.valueOf(obj.toString());	}	@Override	public void updateLastDownloadTime(Download download) {		dao.update("front.account.updateLastDownloadTime",download);	}}