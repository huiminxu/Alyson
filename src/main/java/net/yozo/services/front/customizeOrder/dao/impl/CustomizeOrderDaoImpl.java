package net.yozo.services.front.customizeOrder.dao.impl;import net.yozo.core.dao.BaseDao;import net.yozo.core.dao.page.PagerModel;import net.yozo.services.front.customizeOrder.bean.CustomizeOrder;import net.yozo.services.front.customizeOrder.dao.CustomizeOrderDao;import org.springframework.stereotype.Repository;import javax.annotation.Resource;import java.util.List;@Repository("customizeOrderDaoFront")public class CustomizeOrderDaoImpl implements CustomizeOrderDao {    @Resource	private BaseDao dao;	public void setDao(BaseDao dao) {		this.dao = dao;	}	public PagerModel selectPageList(CustomizeOrder e) {		return dao.selectPageList("front.customizeOrder.selectPageList",				"front.customizeOrder.selectPageCount", e);	}	public List selectList(CustomizeOrder e) {		return dao.selectList("front.customizeOrder.selectList", e);	}	public CustomizeOrder selectOne(CustomizeOrder e) {		return (CustomizeOrder) dao.selectOne("front.customizeOrder.selectOne", e);	}	public int delete(CustomizeOrder e) {		return dao.delete("front.customizeOrder.delete", e);	}	public int update(CustomizeOrder e) {		return dao.update("front.customizeOrder.update", e);	}	public int deletes(String[] ids) {		CustomizeOrder e = new CustomizeOrder();		for (int i = 0; i < ids.length; i++) {			e.setId(ids[i]);			delete(e);		}		return 0;	}	public int insert(CustomizeOrder e) {		return dao.insert("front.customizeOrder.insert", e);	}	public int deleteById(int id) {		return dao.delete("front.customizeOrder.deleteById", id);	}	@Override	public CustomizeOrder selectById(String id) {		return (CustomizeOrder) dao.selectOne("front.customizeOrder.selectOne", id);	}	@Override	public int uploadEdit(CustomizeOrder e) {		return dao.update("front.customizeOrder.uploadEdit", e);	}	@Override	public PagerModel designerPageList(CustomizeOrder e) {		return dao.selectPageList("front.customizeOrder.designerPageList",				"front.customizeOrder.designerPageCount", e);	}	@Override	public PagerModel userOrders(CustomizeOrder e) {		return dao.selectPageList("front.customizeOrder.imuserOrders",				"front.customizeOrder.imuserOrdersCount", e);	}	@Override	public Integer designerPageListCount(String creatorID) {		return (Integer) dao.selectOne("front.customizeOrder.designerPageCount", creatorID);	}	@Override	public Integer userOrdersCount(String customer) {		return (Integer) dao.selectOne("front.customizeOrder.imuserOrdersCount", customer);	}	@Override	public Integer designerOrderCount(Integer creator){		return (Integer) dao.selectOne("front.customizeOrder.designerPageCount", creator);	}}