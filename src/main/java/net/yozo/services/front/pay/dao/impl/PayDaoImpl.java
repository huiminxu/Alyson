package net.yozo.services.front.pay.dao.impl;import net.yozo.core.alipay.Main;import net.yozo.core.dao.BaseDao;import net.yozo.core.dao.page.PagerModel;import net.yozo.core.ipaynow.MchQuery;import net.yozo.core.ipaynow.WeixinPay;import net.yozo.core.wxpay.test.TestWXPayPerformance;import net.yozo.services.front.order.bean.Order;import net.yozo.services.front.pay.bean.Pay;import net.yozo.services.front.pay.dao.PayDao;import org.springframework.stereotype.Repository;import javax.annotation.Resource;import java.util.List;@Repositorypublic class PayDaoImpl implements PayDao {    @Resource	private BaseDao dao;	public void setDao(BaseDao dao) {		this.dao = dao;	}	public PagerModel selectPageList(Pay e) {		return dao.selectPageList("front.pay.selectPageList", "front.pay.selectPageCount",				e);	}	public List selectList(Pay e) {		return dao.selectList("front.pay.selectList", e);	}	public Pay selectOne(Pay e) {		return (Pay) dao.selectOne("front.pay.selectOne", e);	}	public int delete(Pay e) {		return dao.delete("front.pay.delete", e);	}	public int update(Pay e) {		return dao.update("front.pay.update", e);	}	public int deletes(String[] ids) {		Pay e = new Pay();		for (int i = 0; i < ids.length; i++) {			e.setId(ids[i]);			delete(e);		}		return 0;	}	public int insert(Pay e) {		return dao.insert("front.pay.insert", e);	}	public int deleteById(int id) {		return dao.delete("front.pay.deleteById", id);	}	@Override	public Pay selectById(String id) {		return (Pay) dao.selectOne("front.pay.selectById", id);	}	@Override	public String getWeixinQR(Order order) {		//现在支付-微信		WeixinPay wx=new WeixinPay();		return wx.weixinpay(order);		/*//微信官方		String wx=null;		try {			TestWXPayPerformance tm=new TestWXPayPerformance();			wx=tm.doUnifiedOrder(order);		} catch (Exception e) {			e.printStackTrace();		}		return wx;*/	}	@Override	public String getZhifubaoQR(Order order) {		Main main=new Main();		return main.test_trade_precreate(order);	}	@Override	public String payQuery(Order order) {		Main main=new Main();		MchQuery mchQuery=new MchQuery();		/*TestWXPayPerformance tm=null;		try {			tm=new TestWXPayPerformance();		} catch (Exception e) {			e.printStackTrace();		}*/		String resWX=null;		String resZFB=null;		try {			resWX=mchQuery.getQueryRes(order);			//resWX=tm.doOrderQuery(order);			resZFB=main.test_trade_query(order);			if(resWX.equals("A001")||resZFB.equals("success")){				return "A001";			}else if(resWX.equals("A002")||resZFB.equals("failed")){				return "A002";			}else{				return resWX;			}		} catch (Exception e) {			e.printStackTrace();		}		return null;	}}