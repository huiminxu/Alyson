package net.yozo.services.front.designerKpi.dao.impl;import net.yozo.core.dao.BaseDao;import net.yozo.core.dao.page.PagerModel;import net.yozo.services.front.designerKpi.bean.DesignerKpi;import net.yozo.services.front.designerKpi.dao.DesignerKpiDao;import org.springframework.stereotype.Repository;import javax.annotation.Resource;import java.util.List;@Repository("designerKpiDaoFront")public class DesignerKpiDaoImpl implements DesignerKpiDao {    @Resource	private BaseDao dao;	public void setDao(BaseDao dao) {		this.dao = dao;	}	public PagerModel selectPageList(DesignerKpi e) {		return dao.selectPageList("front.designerKpi.selectPageList",				"front.designerKpi.selectPageCount", e);	}	public List selectList(DesignerKpi e) {		return dao.selectList("front.designerKpi.selectList", e);	}	public DesignerKpi selectOne(DesignerKpi e) {		return (DesignerKpi) dao.selectOne("front.designerKpi.selectOne", e);	}	public int delete(DesignerKpi e) {		return dao.delete("front.designerKpi.delete", e);	}	public int update(DesignerKpi e) {		return dao.update("front.designerKpi.update", e);	}	public int deletes(String[] ids) {		DesignerKpi e = new DesignerKpi();		for (int i = 0; i < ids.length; i++) {			e.setId(ids[i]);			delete(e);		}		return 0;	}	public int insert(DesignerKpi e) {		return dao.insert("front.designerKpi.insert", e);	}	public int deleteById(int id) {		return dao.delete("front.designerKpi.deleteById", id);	}	@Override	public DesignerKpi selectById(String id) {		return (DesignerKpi) dao.selectOne("front.designerKpi.selectById", id);	}	@Override	public DesignerKpi compareWithAverage() {		return (DesignerKpi)dao.selectOne("front.designerKpi.selectAverageScore");	}	public void updateDesingerUnfinishQty(Integer desingerId){		dao.update("front.designer.updateUnfinishQty", desingerId);	}}